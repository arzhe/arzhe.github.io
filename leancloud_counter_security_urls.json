[{"title":"为“异常安全”而努力是值得的","url":"/2020/08/11/为“异常安全”而努力是值得的/"},{"title":"pkg-config","url":"/2020/09/18/pkg-config/"},{"title":"为多态基类声明virtual析构函数","url":"/2020/07/22/为多态基类声明virtual析构函数/"},{"title":"了解C++默默编写并调用哪些函数","url":"/2020/07/20/了解C++默默编写并调用哪些函数/"},{"title":"令operator=返回一个reference to *this","url":"/2020/07/25/令operator=返回一个reference to *this/"},{"title":"以对象管理资源","url":"/2020/07/27/以对象管理资源/"},{"title":"以独立语句将new对象置入智能指针","url":"/2020/07/30/以独立语句将new对象置入智能指针/"},{"title":"关于GNU make工具的汇总（3）","url":"/2020/09/14/关于GNU make工具的汇总（3）/"},{"title":"关于GNU make工具的汇总（1）","url":"/2020/09/11/关于GNU make工具的汇总（1）/"},{"title":"关于GNU make工具的汇总（2）","url":"/2020/09/12/关于GNU make工具的汇总（2）/"},{"title":"别让异常逃离析构函数","url":"/2020/07/23/别让异常逃离析构函数/"},{"title":"在operator=中处理“自我赋值”","url":"/2020/07/25/在operator=中处理“自我赋值”/"},{"title":"在资源管理类中小心copying行为","url":"/2020/07/28/在资源管理类中小心copying行为/"},{"title":"在资源管理类中提供对原始资源的访问","url":"/2020/07/29/在资源管理类中提供对原始资源的访问/"},{"title":"将文件间的编译依存关系降至最低","url":"/2020/08/13/将文件间的编译依存关系降至最低/"},{"title":"复制对象时勿忘其每一个成分","url":"/2020/07/26/复制对象时勿忘其每一个成分/"},{"title":"宁以non-member、non-friend替换member函数","url":"/2020/08/03/宁以non-member、non-friend替换member函数/"},{"title":"宁以pass-by-reference-to-const替换pass-by-value","url":"/2020/08/01/宁以pass-by-reference-to-const替换pass-by-value/"},{"title":"尽可能使用const","url":"/2020/07/18/尽可能使用const/"},{"title":"尽量以const,enum,inline替换define","url":"/2020/07/17/尽量以const,enum,inline替换define/"},{"title":"尽量少做转型动作","url":"/2020/08/08/尽量少做转型动作/"},{"title":"尽量延后变量定义式的出现时间","url":"/2020/08/07/尽量延后变量定义式的出现时间/"},{"title":"成对使用new和delete时要采取相同形式","url":"/2020/07/30/成对使用new和delete时要采取相同形式/"},{"title":"必须返回对象时，别妄想返回其reference","url":"/2020/08/02/必须返回对象时，别妄想返回其reference/"},{"title":"确定你的public继承塑模出is-a关系","url":"/2020/09/06/确定你的public继承塑模出is-a关系/"},{"title":"确定对象被使用前已先被初始化","url":"/2020/07/19/确定对象被使用前已先被初始化/"},{"title":"考虑写出一个不抛出异常的swap函数","url":"/2020/08/05/考虑写出一个不抛出异常的swap函数/"},{"title":"绝不在构造和析构过程中调用virtual函数","url":"/2020/07/24/绝不在构造和析构过程中调用virtual函数/"},{"title":"若不想使用编译器自动生成的函数就该明确拒绝","url":"/2020/07/21/若不想使用编译器自动生成的函数就该明确拒绝/"},{"title":"视C++为一个语言联邦","url":"/2020/07/17/视C++为一个语言联邦/"},{"title":"若所有参数皆需类型转换，请为此采用non-member函数","url":"/2020/08/04/若所有参数皆需类型转换，请为此采用non-member函数/"},{"title":"让接口容易被正确使用，不易被误用","url":"/2020/07/31/让接口容易被正确使用，不易被误用/"},{"title":"设计class犹如设计type","url":"/2020/08/01/设计class犹如设计type/"},{"title":"透彻了解inlining的里里外外","url":"/2020/08/12/透彻了解inlining的里里外外/"},{"title":"避免返回handles指向对象内部成分","url":"/2020/08/10/避免返回handles指向对象内部成分/"},{"title":"避免遮掩继承而来的名称","url":"/2020/10/28/避免遮掩继承而来的名称/"},{"title":"考虑virtual函数以外的其他选择","url":"/2020/10/31/考虑virtual函数以外的其他选择/"},{"title":"区分接口继承和实现继承","url":"/2020/10/29/区分接口继承和实现继承/"},{"title":"绝不重新定义继承而来的non-virtual函数","url":"/2020/11/11/绝不重新定义继承而来的non-virtual函数/"},{"title":"绝不重新定义继承而来的缺省参数值","url":"/2020/11/11/绝不重新定义继承而来的缺省参数值/"},{"title":"通过复合塑模出has-a或“根据某物实现出”","url":"/2020/11/11/通过复合塑模出has-a或“根据某物实现出”/"},{"title":"关于pragma那些事","url":"/2020/11/12/关于pragma那些事/"},{"title":"明智而审慎地使用private继承","url":"/2020/11/12/明智而审慎地使用private继承/"},{"title":"明智而审慎地使用多重继承","url":"/2020/11/13/明智而审慎地使用多重继承/"},{"title":"了解隐式接口和编译期多态","url":"/2020/11/14/了解隐式接口和编译期多态/"},{"title":"了解typename的双重意义","url":"/2020/11/14/了解typename的双重意义/"},{"title":"学习处理模版化基类内的名称","url":"/2020/11/15/学习处理模版化基类内的名称/"},{"title":"剔除template内与参数无关的代码","url":"/2020/11/16/剔除template内与参数无关的代码/"},{"title":"编写有兼容性的成员函数模版","url":"/2020/11/18/编写有兼容性的成员函数模版/"},{"title":"使用friend non-member function来完成template中的类型转换机能","url":"/2020/11/19/使用friend non-member function来完成template中的类型转换机能/"},{"title":"traits class与类型信息之间的妙用","url":"/2020/11/21/traits class与类型信息之间的妙用/"},{"title":"template元编程","url":"/2020/11/22/template元编程/"},{"title":"对new-handler这一技术的探讨","url":"/2020/11/23/对new-handler这一技术的探讨/"},{"title":"关于替换new和delete的技术","url":"/2020/11/27/关于替换new和delete的技术/"},{"title":"自定义new和delete的规则","url":"/2020/11/30/自定义new和delete的规则/"},{"title":"placement new与placement delete一定要成双成对","url":"/2020/12/02/placement new与placement delete一定要成双成对/"},{"title":"CMake工具教程（一）","url":"/2021/01/01/CMake工具教程（一）/"},{"title":"CMake命令之configure_file","url":"/2021/01/05/CMake命令之configure_file/"},{"title":"linux软件包安装管理","url":"/2021/03/08/linux软件包安装管理/"},{"title":"原码、补码、反码详解","url":"/2021/03/12/原码、补码、反码详解/"},{"title":"0.1+0.2?","url":"/2021/03/20/0.1+0.2?/"},{"title":"务必重视vector容器中元素的删除操作","url":"/2021/04/09/务必重视vector容器中元素的删除操作/"},{"title":"C／C++中的字节对齐","url":"/2021/04/17/C／C++中的字节对齐/"},{"title":"控制进程终止的函数","url":"/2021/05/10/控制进程终止的函数/"},{"title":"创建进程的fork函数","url":"/2021/05/03/创建进程的fork函数/"},{"title":"wait函数簇","url":"/2021/05/11/wait函数簇/"},{"title":"C++基础（一）","url":"/2021/06/18/C++基础（一）/"},{"title":"C++的常用标准IO函数","url":"/2021/06/25/C++的常用标准IO函数/"},{"title":"CMake命令之install","url":"/2021/07/05/CMake命令之install/"},{"title":"CMake命令之target_compile_definitions","url":"/2021/06/30/CMake命令之target_compile_definitions/"},{"title":"CMake简述","url":"/2021/07/01/CMake简述/"},{"title":"Cmake的install操作","url":"/2021/07/04/Cmake的install操作/"},{"title":"关于c与c++中空指针的细节","url":"/2021/08/19/关于c与c++中空指针的细节/"},{"title":"MySQL那些事（一）","url":"/2021/10/13/MySQL那些事（一）/"},{"title":"多重继承中的数据成员的布局","url":"/2021/10/25/多重继承中的数据成员的布局/"},{"title":"MySQL那些事（二）","url":"/2021/10/14/MySQL那些事（二）/"},{"title":"单一继承中的数据成员的布局","url":"/2021/11/01/单一继承中的数据成员的布局/"}]